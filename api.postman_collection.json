{
	"info": {
		"_postman_id": "0cffe000-227e-4e60-a79d-c28d0f87f934",
		"name": "SaveX API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "43057522"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"userDefault1\",\r\n    \"password\": \"pass1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{apiBaseURL}}/api/auth/login"
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{apiBaseURL}}/api/auth/login"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": "{{apiBaseURL}}/api/auth/logout"
					},
					"response": []
				},
				{
					"name": "Refresh",
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{apiBaseURL}}/api/auth/refresh"
					},
					"response": []
				},
				{
					"name": "Check Session",
					"request": {
						"method": "POST",
						"header": [],
						"url": "{{apiBaseURL}}/api/auth/check-session"
					},
					"response": []
				}
			]
		},
		{
			"name": "v1",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "User",
							"item": [
								{
									"name": "User",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"username\",\n    \"password\": \"Str0ngP@ssw0rd!\",\n    \"email\": \"emailDefault@email.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/users/"
									},
									"response": []
								},
								{
									"name": "User",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/users/9"
									},
									"response": []
								},
								{
									"name": "User",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/users/9"
									},
									"response": []
								},
								{
									"name": "User",
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"newUsername\",\n    \"email\": \"newemailDefault@email.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/users/1"
									},
									"response": []
								},
								{
									"name": "User Password",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"oldPassword\": \"pass1\",\n    \"newPassword\": \"Str0ngP@ssw0rd!\",\n    \"newPasswordConfirmation\": \"Str0ngP@ssw0rd!\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/users/1/password"
									},
									"response": []
								},
								{
									"name": "User Email",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/users/1/email"
									},
									"response": []
								}
							]
						},
						{
							"name": "User Avatar",
							"item": [
								{
									"name": "User Avatar",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/users/9/avatar"
									},
									"response": []
								},
								{
									"name": "User Avatar",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "avatar",
													"type": "file",
													"src": "/Users/dani/Downloads/coolpfp.jpg"
												}
											]
										},
										"url": "{{apiBaseURL}}/api/v1/users/9/avatar"
									},
									"response": []
								},
								{
									"name": "User Avatar",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "avatar",
													"type": "file",
													"src": "/Users/dani/Downloads/view-3d-cool-modern-bird_23-2150946639.avif"
												}
											]
										},
										"url": "{{apiBaseURL}}/api/v1/users/9/avatar"
									},
									"response": []
								},
								{
									"name": "User Avatar",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/users/9/avatar"
									},
									"response": []
								}
							]
						},
						{
							"name": "Paginated",
							"item": [
								{
									"name": "Users",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/users/"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Posts",
					"item": [
						{
							"name": "Post Banner",
							"item": [
								{
									"name": "Post Banner",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/posts/2/banner"
									},
									"response": []
								},
								{
									"name": "Post Banner",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "https://localhost:8443/api/v1/posts/2/banner"
									},
									"response": []
								},
								{
									"name": "Post Banner",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "banner",
													"type": "file",
													"src": "/Users/dani/Downloads/view-3d-cool-modern-bird_23-2150946639.avif"
												}
											]
										},
										"url": "{{apiBaseURL}}/api/v1/posts/2/banner"
									},
									"response": []
								}
							]
						},
						{
							"name": "Post",
							"item": [
								{
									"name": "Post",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/posts/1"
									},
									"response": []
								},
								{
									"name": "Post",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/posts/1"
									},
									"response": []
								},
								{
									"name": "Post",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Nuevo Post 123\",\n    \"description\": \"Nueva descripción\",\n    \"author\": \"Savex\",\n    \"readingTime\": \"5 min\",\n    \"visibility\": \"PUBLIC\",\n    \"tags\": [\"Comparador\", \"New Tag\"],\n    \"content\": \"# Hello Post\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/posts"
									},
									"response": []
								},
								{
									"name": "Post",
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"title\": \"Nuevo Post 123\",\n    \"description\": \"Nueva descripción\",\n    \"author\": \"Savex\",\n    \"readingTime\": \"25 min\",\n    \"visibility\": \"PUBLIC\",\n    \"tags\": [\"Comparador\", \"New Tag\"],\n    \"content\": \"# Hello\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/posts/2"
									},
									"response": []
								},
								{
									"name": "Post Content",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/posts/1/content"
									},
									"response": []
								}
							]
						},
						{
							"name": "Paginated",
							"item": [
								{
									"name": "Posts",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiBaseURL}}/api/v1/posts?size=2&page=2",
											"host": [
												"{{apiBaseURL}}"
											],
											"path": [
												"api",
												"v1",
												"posts"
											],
											"query": [
												{
													"key": "size",
													"value": "2"
												},
												{
													"key": "page",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Post Comments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{apiBaseURL}}/api/v1/posts/1/comments?size=5",
											"host": [
												"{{apiBaseURL}}"
											],
											"path": [
												"api",
												"v1",
												"posts",
												"1",
												"comments"
											],
											"query": [
												{
													"key": "size",
													"value": "5"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Comments",
							"item": [
								{
									"name": "Post Comment",
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"Updated comment\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/posts/1/comments/31"
									},
									"response": []
								},
								{
									"name": "Post Comment",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": \"New comment\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/posts/1/comments"
									},
									"response": []
								},
								{
									"name": "Post Comment",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/posts/1/comments/1"
									},
									"response": []
								},
								{
									"name": "Post Comment",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/posts/1/comments/1"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Products",
					"item": [
						{
							"name": "Products API",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiBaseURL}}/api/v1/products?search=leche&limit=24&page=1&supermarket=mercadona",
									"host": [
										"{{apiBaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "search",
											"value": "leche"
										},
										{
											"key": "limit",
											"value": "24"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "supermarket",
											"value": "mercadona"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Product by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/products/10533@mercadona"
							},
							"response": []
						},
						{
							"name": "Product Suggested",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/products/10533@mercadona/suggested"
							},
							"response": []
						},
						{
							"name": "Products Comparison",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/products/10533@mercadona/compare"
							},
							"response": []
						}
					]
				},
				{
					"name": "ShoppingLists",
					"item": [
						{
							"name": "ShoppingList",
							"item": [
								{
									"name": "ShoppingList",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/lists/1"
									},
									"response": []
								},
								{
									"name": "ShoppingList",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"MyList\",\n    \"description\": \"MyListDescription\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/lists/"
									},
									"response": []
								},
								{
									"name": "ShoppingList",
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Updated List\",\n    \"description\": \"Updated ListDescription\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{apiBaseURL}}/api/v1/lists/1"
									},
									"response": []
								},
								{
									"name": "ShoppingList",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/lists/1"
									},
									"response": []
								}
							]
						},
						{
							"name": "Paginated",
							"item": [
								{
									"name": "ShoppingLists",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{apiBaseURL}}/api/v1/lists/"
									},
									"response": []
								}
							]
						},
						{
							"name": "ShoppingList Product",
							"item": [
								{
									"name": "Product",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": "{{apiBaseURL}}/api/v1/lists/1/product/10533@mercadona"
									},
									"response": []
								},
								{
									"name": "Product",
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": "{{apiBaseURL}}/api/v1/lists/1/product/10533@mercadona"
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Stats",
					"item": [
						{
							"name": "Supermarkets",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/stats/products"
							},
							"response": []
						},
						{
							"name": "Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/stats/users"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "v1-Testing",
			"item": [
				{
					"name": "Unautheticated-endpoints",
					"item": [
						{
							"name": "Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Example users are loaded by default\", () => {\r",
											"    const res = pm.response.json()\r",
											"    const users = res.data.page\r",
											"\r",
											"    pm.expect(users.length).to.be.greaterThan(0)\r",
											"})\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/users/"
							},
							"response": []
						},
						{
							"name": "Posts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"// --- Capture a post id ---\r",
											"var jsonData = pm.response.json();\r",
											"const id = jsonData.data.page[0].id\r",
											"// -------------------------\r",
											"\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Example posts are loaded by default\", () => {\r",
											"    const res = pm.response.json()\r",
											"    const data = res.data.page\r",
											"\r",
											"    pm.expect(data.length).to.be.greaterThan(0)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiBaseURL}}/api/v1/posts?size=999",
									"host": [
										"{{apiBaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"posts"
									],
									"query": [
										{
											"key": "size",
											"value": "999"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post comments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Example comments are loaded by default\", () => {\r",
											"    const res = pm.response.json()\r",
											"    const data = res.data.page\r",
											"\r",
											"    pm.expect(data.length).to.be.greaterThan(0)\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{example-post-id}}/comments"
							},
							"response": []
						},
						{
							"name": "Post banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test for response body properties\r",
											"pm.test(\"Response body has properties\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"image/\")\r",
											"});\r",
											"\r",
											"pm.test(\"Response is an image\", function() {\r",
											"    const ct = pm.response.headers.get(\"Content-Type\")\r",
											"    pm.expect(ct).to.be.contain(\"image\")\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{example-post-id}}/banner"
							},
							"response": []
						}
					]
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const res = pm.response.json()\r",
											"const users = res.data\r",
											"\r",
											"const nUsers = users.length\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiBaseURL}}/api/v1/users?size=999",
									"host": [
										"{{apiBaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "size",
											"value": "999"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const req = pm.request\r",
											"const timestamp = req.body.toJSON().formdata.slice(-1)[0].value\r",
											"const id = pm.response.json().data.id\r",
											"\r",
											"pm.collectionVariables.set(\"example-user\", `user${timestamp}`)\r",
											"pm.collectionVariables.set(\"example-user-id\", id)\r",
											"\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "user{{$timestamp}}@test.com",
											"type": "text"
										},
										{
											"key": "username",
											"value": "user{{$timestamp}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "passPASS1",
											"type": "text"
										},
										{
											"key": "name",
											"value": "user{{$timestamp}}",
											"type": "text"
										},
										{
											"key": "timestamp",
											"value": "{{$timestamp}}",
											"type": "text"
										}
									]
								},
								"url": "{{apiBaseURL}}/api/v1/users"
							},
							"response": []
						},
						{
							"name": "Check user created",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"example-user-id\", pm.response.json().data.id)\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"The user has the right data\", () => {\r",
											"    const userData = pm.response.json().data\r",
											"    \r",
											"    pm.expect(userData.name).to.include(pm.collectionVariables.get(\"example-user\"))\r",
											"    pm.expect(userData.role).to.include(\"USER\")\r",
											"    pm.expect(userData).to.not.have.property('password');\r",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/users/{{example-user-id}}"
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has properties\", function () {\r",
											"    pm.expect(pm.response.json().status).to.be.equal(\"SUCCESS\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{example-user}}\",\r\n    \"password\": \"passPASS1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{apiBaseURL}}/api/auth/login"
							},
							"response": []
						},
						{
							"name": "User avatar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "avatar",
											"type": "file",
											"src": "postman-cloud:///1f004de7-359e-4f50-a52d-37fd7ff15265"
										}
									]
								},
								"url": "{{apiBaseURL}}/api/v1/users/{{example-user-id}}/avatar"
							},
							"response": []
						},
						{
							"name": "User avatar (img 1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Received data is an image\", function () {\r",
											"    pm.expect(pm.response.body).to.not.be.null;\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('image');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/users/{{example-user-id}}/avatar"
							},
							"response": []
						},
						{
							"name": "User avatar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Fixed the response type to JSON\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "avatar",
											"type": "file",
											"src": "postman-cloud:///1f004de7-a0d5-43f0-8885-c869061d7f71"
										}
									]
								},
								"url": "{{apiBaseURL}}/api/v1/users/{{example-user-id}}/avatar"
							},
							"response": []
						},
						{
							"name": "User avatar (img 2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Received data is an image\", function () {\r",
											"    pm.expect(pm.response.body).to.not.be.null;\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('image');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/users/{{example-user-id}}/avatar"
							},
							"response": []
						},
						{
							"name": "User avatar",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/users/{{example-user-id}}/avatar"
							},
							"response": []
						},
						{
							"name": "User avatar (none)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/users/{{example-user-id}}/avatar"
							},
							"response": []
						},
						{
							"name": "User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"User cannot delete himself\", function () {\r",
											"    pm.expect(pm.response.json().error.message).to.be.equal(\"You cannot delete yourself\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/users/{{example-user-id}}"
							},
							"response": []
						},
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": "{{apiBaseURL}}/api/auth/logout"
							},
							"response": []
						}
					]
				},
				{
					"name": "Posts",
					"item": [
						{
							"name": "Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": "{{apiBaseURL}}/api/auth/logout"
							},
							"response": []
						},
						{
							"name": "Posts paginated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const data = pm.response.json().data.page\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Example posts are loaded\", function () {\r",
											"    pm.expect(data.length).to.be.greaterThan(0)\r",
											"});\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Only 2 posts are retrieved\", function () {\r",
											"    pm.expect(data.length).to.be.equal(2)\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiBaseURL}}/api/v1/posts?size=2&page=0",
									"host": [
										"{{apiBaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"posts"
									],
									"query": [
										{
											"key": "size",
											"value": "2"
										},
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const data = pm.response.json().data.page\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{example-post-id}}"
							},
							"response": []
						},
						{
							"name": "Post comments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const data = pm.response.json().data.page\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test for the presence of data array\r",
											"pm.test(\"Response body has a data array\", function () {\r",
											"    pm.expect(data).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Example comments are loaded\", function () {\r",
											"     pm.expect(data.length).to.be.greaterThan(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiBaseURL}}/api/v1/posts/{{example-post-id}}/comments?size=999",
									"host": [
										"{{apiBaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{example-post-id}}",
										"comments"
									],
									"query": [
										{
											"key": "size",
											"value": "999"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test for specific content in the response body\r",
											"pm.test(\"Response body contains steps to use the price comparison tool\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"Cómo usar nuestro comparador de precios\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{example-post-id}}/content"
							},
							"response": []
						},
						{
							"name": "Post banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Is image\", function () {\r",
											"    const ct = pm.response.headers.get(\"Content-Type\")\r",
											"\r",
											"    pm.expect(ct).to.include(\"image/\")\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{example-post-id}}/banner"
							},
							"response": []
						},
						{
							"name": "Login (user)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has properties\", function () {\r",
											"    pm.expect(pm.response.json().status).to.be.equal(\"SUCCESS\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"userDefault1\",\r\n    \"password\": \"pass1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{apiBaseURL}}/api/auth/login"
							},
							"response": []
						},
						{
							"name": "Post (unauthorized)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Nuevo Post 123",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Descripcion random",
											"type": "text"
										},
										{
											"key": "author",
											"value": "SaveX",
											"type": "text"
										},
										{
											"key": "readingTime",
											"value": "1 min",
											"type": "text"
										},
										{
											"key": "visibility",
											"value": "PUBLIC",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "Comparador",
											"type": "text"
										},
										{
											"key": "content\n",
											"value": "# Hello\n\n- This is a new post",
											"type": "text"
										}
									]
								},
								"url": "{{apiBaseURL}}/api/v1/posts"
							},
							"response": []
						},
						{
							"name": "Login (admin)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response body has properties\", function () {\r",
											"    pm.expect(pm.response.json().status).to.be.equal(\"SUCCESS\")\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{apiBaseURL}}/api/auth/login"
							},
							"response": []
						},
						{
							"name": "Post (success)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const data = pm.response.json().data\r",
											"const id = data.split(\"/\").slice(-1)[0]\r",
											"pm.collectionVariables.set(\"new-post-id\", id)\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"// Test for content type\r",
											"pm.test(\"Content type is application/json\", function () {\r",
											"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Nuevo Post 123",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Descripcion random",
											"type": "text"
										},
										{
											"key": "author",
											"value": "SaveX",
											"type": "text"
										},
										{
											"key": "readingTime",
											"value": "1 min",
											"type": "text"
										},
										{
											"key": "visibility",
											"value": "PUBLIC",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "Comparador",
											"type": "text"
										},
										{
											"key": "content\n",
											"value": "# Hello\n\n- This is a new post",
											"type": "text"
										}
									]
								},
								"url": "{{apiBaseURL}}/api/v1/posts"
							},
							"response": []
						},
						{
							"name": "Post (new)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"// Test for response body properties\r",
											"pm.test(\"Response body has all expected properties\", function () {\r",
											"    pm.expect(pm.response.json().data).to.have.all.keys('id', 'title', 'description', 'author', 'date', 'readingTime', 'visibility', 'tags');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}"
							},
							"response": []
						},
						{
							"name": "Post banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const data = pm.response.json().data\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"\r",
											"// Test for response body properties\r",
											"pm.test(\"Response body has the required properties\", function () {\r",
											"    pm.expect(data).to.have.property('id');\r",
											"    pm.expect(data).to.have.property('title');\r",
											"    pm.expect(data).to.have.property('description');\r",
											"    pm.expect(data).to.have.property('author');\r",
											"    pm.expect(data).to.have.property('date');\r",
											"    pm.expect(data).to.have.property('readingTime');\r",
											"    pm.expect(data).to.have.property('visibility');\r",
											"    pm.expect(data).to.have.property('tags');\r",
											"});\r",
											"\r",
											"// Test for response body content type\r",
											"pm.test(\"Response has a JSON content type\", function () {\r",
											"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "banner",
											"type": "file",
											"src": "postman-cloud:///1f004de8-3fa5-4fc0-b35c-3c4b505721f8"
										}
									]
								},
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}/banner"
							},
							"response": []
						},
						{
							"name": "Post banner (new)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    const ct = pm.response.headers.get(\"Content-Type\")\r",
											"\r",
											"    pm.expect(ct).to.include(\"image/\")\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}/banner"
							},
							"response": []
						},
						{
							"name": "Post banner",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"\r",
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}/banner"
							},
							"response": []
						},
						{
							"name": "Post banner (not found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}/banner"
							},
							"response": []
						},
						{
							"name": "Post comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const id = pm.response.json().data.id\r",
											"pm.collectionVariables.set(\"new-comment-id\", id)\r",
											"\r",
											"pm.test(\"Status code is 201 created\", function () {\r",
											"     pm.expect(pm.response.code).to.equal(201);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "content",
											"value": "New comment",
											"type": "text"
										}
									]
								},
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}/comments"
							},
							"response": []
						},
						{
							"name": "Post comment (just created)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"// Test for comment id\r",
											"pm.test(\"Comment id is correct\", function () {\r",
											"    pm.expect(pm.response.json().data.id).to.equal(pm.collectionVariables.get(\"new-comment-id\"));\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}/comments/{{new-comment-id}}"
							},
							"response": []
						},
						{
							"name": "Post comment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}/comments/{{new-comment-id}}"
							},
							"response": []
						},
						{
							"name": "Post comment (not found)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}/comments/{{new-comment-id}}"
							},
							"response": []
						},
						{
							"name": "Post title",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"// Test for updated title in the response body\r",
											"pm.test(\"Updated title is present in the response\", function () {\r",
											"    pm.expect(pm.response.json().data.title).to.eql(\"XXXXXXXXXXXX\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}?title=XXXXXXXXXXXX",
									"host": [
										"{{apiBaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"posts",
										"{{new-post-id}}"
									],
									"query": [
										{
											"key": "title",
											"value": "XXXXXXXXXXXX"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for the status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": "{{apiBaseURL}}/api/v1/posts/{{new-post-id}}"
							},
							"response": []
						},
						{
							"name": "Verify deleted post",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test for status code\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Not present in the posts list\", function () {\r",
											"     var jsonData = pm.response.json();\r",
											"     pm.expect(pm.response.text()).to.not.include(\"XXXXXXXXXXXX\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiBaseURL}}/api/v1/posts?size=999",
									"host": [
										"{{apiBaseURL}}"
									],
									"path": [
										"api",
										"v1",
										"posts"
									],
									"query": [
										{
											"key": "size",
											"value": "999"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"// Test for response body properties\r",
							"pm.test(\"API Scheme | Response body has properties\", function () {\r",
							"    if (pm.response.headers.get(\"Content-Type\")?.includes(\"image\")) return\r",
							"    if (pm.request.url.getPath().includes(\"api/auth/log\")) return\r",
							"    if (pm.response.code >= 403) return\r",
							"\r",
							"    pm.expect(pm.response.json()).to.have.property('data');\r",
							"    pm.expect(pm.response.json()).to.have.property('error');\r",
							"});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiBaseURL",
			"value": "https://localhost:8443",
			"type": "default"
		},
		{
			"key": "example-post-id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "example-user",
			"value": ""
		},
		{
			"key": "example-user-id",
			"value": ""
		},
		{
			"key": "new-post-id",
			"value": ""
		},
		{
			"key": "new-comment-id",
			"value": ""
		}
	]
}