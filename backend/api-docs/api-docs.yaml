openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8443
  description: Generated server url
paths:
  /api/v1/users/{id}/avatar:
    get:
      tags:
      - rest-user-controller
      operationId: getProfilePic
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - rest-user-controller
      operationId: modifyAvatar
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
              required:
              - avatar
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-user-controller
      operationId: uploadAvatar
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
              required:
              - avatar
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - rest-user-controller
      operationId: deleteAvatar
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/:
    get:
      tags:
      - rest-user-controller
      operationId: getUsers
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-user-controller
      operationId: registerNewUser
      parameters:
      - name: createUserRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreateUserRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users:
    get:
      tags:
      - rest-user-controller
      operationId: getUsers_1
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-user-controller
      operationId: registerNewUser_1
      parameters:
      - name: createUserRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreateUserRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/posts/{id}/comments:
    get:
      tags:
      - rest-comments-controller
      operationId: getComments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-comments-controller
      operationId: createComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: request
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreateCommentRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/posts/{id}/comments/:
    get:
      tags:
      - rest-comments-controller
      operationId: getComments_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-comments-controller
      operationId: createComment_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: request
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreateCommentRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/posts/{id}/banner:
    get:
      tags:
      - rest-posts-controller
      operationId: getPostBanner
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-posts-controller
      operationId: updatePostBanner
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                banner:
                  type: string
                  format: binary
              required:
              - banner
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - rest-posts-controller
      operationId: deletePostBanner
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/posts/:
    get:
      tags:
      - rest-posts-controller
      operationId: getPosts
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-posts-controller
      operationId: createPost
      parameters:
      - name: createPostRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreatePostRequest"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                banner:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/posts:
    get:
      tags:
      - rest-posts-controller
      operationId: getPosts_1
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-posts-controller
      operationId: createPost_1
      parameters:
      - name: createPostRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreatePostRequest"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                banner:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/lists/{id}/product/{productId}:
    post:
      tags:
      - rest-shopping-list-controller
      operationId: addProductToList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: productId
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - rest-shopping-list-controller
      operationId: removeProductFromList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: productId
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/lists:
    get:
      tags:
      - rest-shopping-list-controller
      operationId: getUserLists
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-shopping-list-controller
      operationId: newList
      parameters:
      - name: request
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreateListRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/lists/:
    get:
      tags:
      - rest-shopping-list-controller
      operationId: getUserLists_1
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - rest-shopping-list-controller
      operationId: newList_1
      parameters:
      - name: request
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreateListRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/refresh:
    post:
      tags:
      - rest-login-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - rest-login-controller
      operationId: logOut
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - rest-login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/v1/users/{id}:
    get:
      tags:
      - rest-user-controller
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - rest-user-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - rest-user-controller
      operationId: modifyUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: modifyUser
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/ModifyUserRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users/{id}/password:
    patch:
      tags:
      - rest-user-controller
      operationId: modifyPassword
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: modifyUserPassword
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/ModifyPasswordRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/posts/{id}:
    get:
      tags:
      - rest-posts-controller
      operationId: getPost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - rest-posts-controller
      operationId: deletePost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - rest-posts-controller
      operationId: updatePost
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: createPostRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreatePostRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/posts/{id}/comments/{commentId}:
    get:
      tags:
      - rest-comments-controller
      operationId: getComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - rest-comments-controller
      operationId: deleteComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - rest-comments-controller
      operationId: updateComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: request
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreateCommentRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/lists/{id}:
    get:
      tags:
      - rest-shopping-list-controller
      operationId: getShoppingList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - rest-shopping-list-controller
      operationId: removeList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - rest-shopping-list-controller
      operationId: updateList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: request
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/CreateListRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/products/{id}:
    get:
      tags:
      - rest-products-controller
      operationId: getProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/products/{id}/suggested:
    get:
      tags:
      - rest-products-controller
      operationId: suggestProducts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/products/{id}/compare:
    get:
      tags:
      - rest-products-controller
      operationId: compareProducts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/products/:
    get:
      tags:
      - rest-products-controller
      operationId: getProducts
      parameters:
      - name: searchProductRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SearchProductRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/products:
    get:
      tags:
      - rest-products-controller
      operationId: getProducts_1
      parameters:
      - name: searchProductRequest
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/SearchProductRequest"
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/posts/{id}/content:
    get:
      tags:
      - rest-posts-controller
      operationId: getPostContent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    CreateUserRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    CreateCommentRequest:
      type: object
      properties:
        content:
          type: string
    CreatePostRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        content:
          type: string
        author:
          type: string
        date:
          type: string
        tags:
          type: array
          items:
            type: string
        visibility:
          type: string
          enum:
          - PUBLIC
          - PRIVATE
    CreateListRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    ModifyUserRequest:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        email:
          type: string
    ModifyPasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
        newPasswordConfirmation:
          type: string
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
    SearchProductRequest:
      type: object
      properties:
        search:
          type: string
        supermarket:
          type: string
        keywords:
          type: string
        minPrice:
          type: number
          format: double
        maxPrice:
          type: number
          format: double
        limit:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
